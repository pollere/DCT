// trust schema for sensor aggregators with meshed relays

// Each process has an identity associated with a particular type of
// certificate that is signed and validatable.

// trust anchor name associated with this schema
_domain:    "rlygrp"

// MBPS Publication definition
// target, topic, args are set using application parameters
// msgID, sCnt, mts get set in mbps.hpp (the MBPS "shim") for a particular message
// In addition, all trust schemas for mbps-based applications must include a #chainInfo
// which lists all the signing chain tags so schemaLib can access them

#Pub: _domain/target/topic/args/msgID/sCnt/mts

sensRprt: #Pub & { target: "sens", topic: "rpt", args: _roleId } <= sensSign
sensCmd: #Pub & { target: "sens", topic: "cmd", args: "reset" | "read" } <= cntrlSign
// sensAck: #Pub & { target: "sens", topic: "ack" } <= sensSign

roleCert:   _domain/_role/_roleId/_keyinfo
signCert:   _domain/_role/_roleId/"sgn"/_keyinfo

// There are different signing chains for sensCert & cntrlCerts.
// "key makers" (authorized by the KMP capability, kmpCap) are
// responsible for creating and distributing the nonce
// symmetric encryption keys.
// Giving relay Cert that capability if AEAD is selected

sensSign:   signCert & { _role: "sensor" } <= sensCert
cntrlSign:  signCert & { _role: "controller" } <= mbrCert
rlySign:    signCert & { _role: "relay" } <= mbrCert

sensCert:   roleCert & { _role: "sensor" } <= domCert
mbrCert:    roleCert <= domCert | kmpCap

// capability certs (capabilities granted to roles)
capCert: _domain/"CAP"/capId/capArg/_keyinfo
kmpCap:   capCert & { capId: "KMP", capArg: _ } <= domCert    // allowed to be a key maker (capArg is priority)

domCert: _domain/_keyinfo

// information about signing chain
#chainInfo: /_role/_roleId <= signCert

// schema's Publication prefix and validator type
#pubPrefix:    _domain
#pubValidator: "AEADSGN"

// used for cAdds
#wireValidator: "EdDSA"

// uses NDN certificate format v2 suffix for a cert name, final four
// components are KEY, keyID, issuerID, and version
_keyinfo: "KEY"/_/"dct"/_
