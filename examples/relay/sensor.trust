// trust schema for sensor aggregators with meshed relays

// Each process has an identity associated with a particular type of
// certificate that is signed and validatable.

// trust anchor name associated with this schema
_domain:    "rlygrp"

// MBPS Publication definition
// target, topic, args are set using application parameters
// msgID, sCnt, mts get set in mbps.hpp (the MBPS "shim") for a particular message
// In addition, all trust schemas for mbps-based applications must include a #chainInfo
// which lists all the signing chain tags so schemaLib can access them

#Pub: _domain/target/topic/args/msgID/sCnt/mts

sensRprt: #Pub & { target: "sens", topic: "rpt", args: _roleId } <= sensCert
sensCmd: #Pub & { target: "sens", topic: "cmd", args: "reset" | "read" } <= cntrlCert
// sensAck: #Pub & { target: "sens", topic: "ack" } <= sensCert

roleCert:    _domain/_role/_roleId/_keyinfo

// There are different signing chains for aggrCert & cntrlCerts.
// "key makers" (authorized by the KM capability, kmCap) are
// responsible for creating and distributing the nonce
// symmetric encryption keys.
// Giving aggrCert that capability if AEAD is selected
sensCert:  roleCert & { _role: "sensor" } <= netCert
cntrlCert: roleCert & { _role: "controller" } <= kmCap | netCert
rlyCert:  roleCert & { _role: "relay" } <= kmCap | netCert

// capability certs (capabilities granted to roles)
capCert: _domain/"CAP"/_capId/_capArg/_keyinfo
kmCap:   capCert & { _capId: "KM" } <= netCert    // allowed to be a key maker (capArg is priority)

netCert: _domain/_keyinfo

// information about signing chain
#chainInfo: /_role/_roleId <= roleCert

// schema's Publication prefix and validator type
#pubPrefix:    _domain
#pubValidator: "EdDSA"

// used for cAdds
#wireValidator: "EdDSA"

// uses NDN certificate format v2 suffix for a cert name, final four
// components are KEY, keyID, issuerID, and version
_keyinfo: "KEY"/_/"dct"/_
