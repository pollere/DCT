// Trust schema for office example (ACM ICN 2021 Tutorial)

// Each application process in this trust zone has a capability:
// an app on a room device controls some functions in a room
// an app on a phone acts as a smart badge
// Rooms are: {room1 | room2 | room3 | room4 | confrm | hall}
// (a room id of "all" is used for the guard role)
// Room devices control functions of: lockset, light, temperature, screen
// Directives of "command" and "status" tagged as topics

// trust anchor name for this trust zone
_net:    "office"

// Publication definition.
// Use of mbps shim means publications have mId, sCnt, mts (set by mbps) and
// at least one leading component to identify the network. Between those
// components, at least one more component followed by others as needed

#pub: _net/func/topic/loc/args/msgID/sCnt/mts

ctrlr: #pub & (
    { func: "light" | "screen", args: "on" | "off" } |
    { func: "door", args: "lock" | "unlock" } |
    { func: "temp", args: "ooo"| "heat" | "cool" })

status: ctrlr & { topic: "status", loc: _roomId } <= cntrlrCert

rmCmd: ctrlr & { topic: "command", loc: _roomId } <= empCert | mgrCert

mgrCmd: ctrlr & { topic: "command", loc: "confRm"|"hall" } <= mgrCert

grdCmd: #pub & { topic: "command", loc: "all" } & ({ func: "light", args: "on"|"off" } |
        { func: "door", args: "lock"|"unlock" } | { func: "temp", args: "ooo" }) <= grdCert

roleCert: _net/_role/_roleId/_keyinfo
empCert: roleCert & { _role: "employee" } <= roomCert
mgrCert: roleCert & { _role: "manager" } <= roomCert
grdCert: roleCert & { _role: "guard" } <= roomCert
cntrlrCert: roleCert & { _role: "controller" } <= kmCap | roomCert

roomCert: _net/"room"/_roomId/_keyinfo <= configCert

// capability certs format (for capabilities granted to roles)
capCert: _net/"CAP"/_capId/_capArg/_keyinfo <= roomCert
// AEAD privacy requires key maker(s)
kmCap:   capCert & { _capId: "KM" }  // allowed to be a key maker (capArg is priority)

configCert: _net/"config"/_configId/_keyinfo <= netCert
netCert:    _net/_keyinfo

// information about signing chain
#chainInfo: /_role/_roleId/_roomId <= roleCert

// Publication prefix and validator type
#pubPrefix:    _net
#pubValidator: "EdDSA"

// for cAdds
#wireValidator: "AEAD"

// The final components are KEY,keyID, issuerID and version 
_keyinfo: "KEY"/_/"dct"/_

